#!/usr/bin/env zsh

##
# This script functions as a basic REPL for shu2.
#
# Usage example:
#   % shu-repl

source "${0:A:h}/../lib"

setopt no_auto_list
setopt menu_complete

bindkey -e
bindkey	'\e[3~' delete-char
bindkey '\e[Z'  reverse-menu-complete

zle_highlight+=( paste:none )

this:main() {
	local    _line=. _a _b _color
	local -a _ret

	fc -p

	print -r 'Enter commands to evaluate. Press ^C or ^D to exit.'

	while :; do
		trap - SIGINT

		[[ -n $_line ]] && print
		_line=
		vared -ehp $'\033[35m>>>\033[0m ' _line || exit 1

		_line=${_line##[[:space:]]##}
		_line=${_line%%[[:space:]]##}

		if [[ -n $_line ]]; then
			print -rs -- $_line
		else
			continue
		fi

		trap 'print >&2' SIGINT

		shu::ignpanic 1
		_a=$SECONDS
		eval "${_line}; _ret=( \$pipestatus )"
		_b=$SECONDS
		shu::ignpanic 1

		if (( _ret[-1] == 0 )); then
			_color=$'\033[32m'
		else
			_color=$'\033[31m'
		fi

		printf '%s<<< %s (%d Âµs)%s\n' \
			$_color \
			${(j< | >)_ret} \
			$(( (_b - _a) * 1_000_000 )) \
			$'\033[0m'
	done

	return 1
}

this:main "${@}"
return $?
